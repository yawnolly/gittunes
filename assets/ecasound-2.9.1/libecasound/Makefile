# Makefile.in generated by automake 1.9.6 from Makefile.am.
# libecasound/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# ----------------------------------------------------------------------
# File: ecasound/libecasound/Makefile.am
# Description: Ecasound main library
# License: GPL (see ecasound/{AUTHORS,COPYING})
# ----------------------------------------------------------------------


srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/ecasound
pkglibdir = $(libdir)/ecasound
pkgincludedir = $(includedir)/ecasound
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
check_PROGRAMS = libecasound_tester$(EXEEXT)
subdir = libecasound
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/libecasound-config.in \
	ChangeLog
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libecasound-config
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(top_builddir)/libecasound/plugins/libecasound_plugins.la \
	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_2 = $(top_builddir)/libecasound/plugins/libecasound_plugins_debug.la \
#	$(am__DEPENDENCIES_1)
libecasound_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__libecasound_la_SOURCES_DIST = audioio-cdr.cpp audioio-ewf.cpp \
	audioio-mp3.cpp audioio-ogg.cpp audioio-wave.cpp audioio.cpp \
	audioio-buffered.cpp audioio-device.cpp audioio-null.cpp \
	audioio-raw.cpp audioio-mikmod.cpp audioio-rtnull.cpp \
	audioio-loop.cpp audioio-forked-stream.cpp \
	audioio-timidity.cpp audioio-db-server.cpp \
	audioio-db-buffer.cpp audioio-db-client.cpp \
	audioio-typeselect.cpp audioio-resample.cpp \
	audioio-reverse.cpp audioio-proxy.cpp audioio-flac.cpp \
	audioio-aac.cpp audioio-tone.cpp audioio-seqbase.cpp \
	audioio-acseq.cpp audioio-oss.cpp jack-connections.cpp \
	midi-server.cpp midi-client.cpp midi-parser.cpp midiio.cpp \
	midiio-raw.cpp midiio-aseq.cpp eca-chain.cpp eca-engine.cpp \
	samplebuffer.cpp samplebuffer_functions.cpp eca-session.cpp \
	eca-resources.cpp resource-file.cpp eca-logger.cpp \
	eca-logger-default.cpp eca-logger-interface.cpp \
	eca-logger-wellformed.cpp layer.cpp samplebuffer_iterators.cpp \
	eca-version.cpp eca-operator.cpp generic-controller.cpp \
	eca-object-factory.cpp eca-chainsetup.cpp \
	eca-chainsetup-bufparams.cpp eca-chainsetup-parser.cpp \
	eca-chainsetup-position.cpp eca-control.cpp \
	eca-control-base.cpp eca-control-dump.cpp eca-control-main.cpp \
	eca-control-mt.cpp eca-control-objects.cpp \
	eca-iamode-parser.cpp eca-samplerate-aware.cpp \
	eca-audio-position.cpp eca-audio-format.cpp eca-audio-time.cpp \
	eca-fileio-stream.cpp eca-fileio-mmap.cpp eca-osc.cpp \
	eca-static-object-maps.cpp eca-object-map.cpp \
	eca-preset-map.cpp audiofx.cpp audiofx_misc.cpp \
	audiofx_amplitude.cpp audiofx_compressor.cpp \
	audiofx_analysis.cpp audiofx_envelope_modulation.cpp \
	audiofx_filter.cpp audiofx_rcfilter.cpp audiofx_reverb.cpp \
	audiofx_timebased.cpp audiogate.cpp audiofx_mixing.cpp \
	audiofx_ladspa.cpp audiofx_lv2.cpp audiofx_lv2_world.cpp \
	audio-stamp.cpp global-preset.cpp preset.cpp file-preset.cpp \
	midi-cc.cpp osc-gen.cpp osc-gen-file.cpp osc-sine.cpp \
	linear-envelope.cpp two-stage-linear-envelope.cpp \
	stamp-ctrl.cpp generic-linear-envelope.cpp
am__objects_1 = audioio-cdr.lo audioio-ewf.lo audioio-mp3.lo \
	audioio-ogg.lo audioio-wave.lo audioio.lo audioio-buffered.lo \
	audioio-device.lo audioio-null.lo audioio-raw.lo \
	audioio-mikmod.lo audioio-rtnull.lo audioio-loop.lo \
	audioio-forked-stream.lo audioio-timidity.lo \
	audioio-db-server.lo audioio-db-buffer.lo audioio-db-client.lo \
	audioio-typeselect.lo audioio-resample.lo audioio-reverse.lo \
	audioio-proxy.lo audioio-flac.lo audioio-aac.lo \
	audioio-tone.lo audioio-seqbase.lo audioio-acseq.lo
am__objects_2 = audioio-oss.lo
#am__objects_3 = jack-connections.lo
am__objects_4 = midi-server.lo midi-client.lo midi-parser.lo midiio.lo \
	midiio-raw.lo midiio-aseq.lo
am__objects_5 = eca-chain.lo eca-engine.lo samplebuffer.lo \
	samplebuffer_functions.lo eca-session.lo eca-resources.lo \
	resource-file.lo eca-logger.lo eca-logger-default.lo \
	eca-logger-interface.lo eca-logger-wellformed.lo layer.lo \
	samplebuffer_iterators.lo eca-version.lo eca-operator.lo \
	generic-controller.lo eca-object-factory.lo eca-chainsetup.lo \
	eca-chainsetup-bufparams.lo eca-chainsetup-parser.lo \
	eca-chainsetup-position.lo eca-control.lo eca-control-base.lo \
	eca-control-dump.lo eca-control-main.lo eca-control-mt.lo \
	eca-control-objects.lo eca-iamode-parser.lo \
	eca-samplerate-aware.lo eca-audio-position.lo \
	eca-audio-format.lo eca-audio-time.lo eca-fileio-stream.lo \
	eca-fileio-mmap.lo eca-osc.lo eca-static-object-maps.lo \
	eca-object-map.lo eca-preset-map.lo
am__objects_6 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5)
am__objects_7 = audiofx.lo audiofx_misc.lo audiofx_amplitude.lo \
	audiofx_compressor.lo audiofx_analysis.lo \
	audiofx_envelope_modulation.lo audiofx_filter.lo \
	audiofx_rcfilter.lo audiofx_reverb.lo audiofx_timebased.lo \
	audiogate.lo audiofx_mixing.lo audiofx_ladspa.lo \
	audiofx_lv2.lo audiofx_lv2_world.lo audio-stamp.lo
am__objects_8 = global-preset.lo preset.lo file-preset.lo
am__objects_9 = midi-cc.lo osc-gen.lo osc-gen-file.lo osc-sine.lo \
	linear-envelope.lo two-stage-linear-envelope.lo stamp-ctrl.lo \
	generic-linear-envelope.lo
am__objects_10 = $(am__objects_7) \
	$(am__objects_8) \
	$(am__objects_9)
am_libecasound_la_OBJECTS = $(am__objects_6) $(am__objects_10)
libecasound_la_OBJECTS = $(am_libecasound_la_OBJECTS)
am_libecasound_la_rpath = -rpath $(libdir)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_2)
libecasound_debug_la_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__libecasound_debug_la_SOURCES_DIST = audioio-cdr.cpp \
	audioio-ewf.cpp audioio-mp3.cpp audioio-ogg.cpp \
	audioio-wave.cpp audioio.cpp audioio-buffered.cpp \
	audioio-device.cpp audioio-null.cpp audioio-raw.cpp \
	audioio-mikmod.cpp audioio-rtnull.cpp audioio-loop.cpp \
	audioio-forked-stream.cpp audioio-timidity.cpp \
	audioio-db-server.cpp audioio-db-buffer.cpp \
	audioio-db-client.cpp audioio-typeselect.cpp \
	audioio-resample.cpp audioio-reverse.cpp audioio-proxy.cpp \
	audioio-flac.cpp audioio-aac.cpp audioio-tone.cpp \
	audioio-seqbase.cpp audioio-acseq.cpp audioio-oss.cpp \
	jack-connections.cpp midi-server.cpp midi-client.cpp \
	midi-parser.cpp midiio.cpp midiio-raw.cpp midiio-aseq.cpp \
	eca-chain.cpp eca-engine.cpp samplebuffer.cpp \
	samplebuffer_functions.cpp eca-session.cpp eca-resources.cpp \
	resource-file.cpp eca-logger.cpp eca-logger-default.cpp \
	eca-logger-interface.cpp eca-logger-wellformed.cpp layer.cpp \
	samplebuffer_iterators.cpp eca-version.cpp eca-operator.cpp \
	generic-controller.cpp eca-object-factory.cpp \
	eca-chainsetup.cpp eca-chainsetup-bufparams.cpp \
	eca-chainsetup-parser.cpp eca-chainsetup-position.cpp \
	eca-control.cpp eca-control-base.cpp eca-control-dump.cpp \
	eca-control-main.cpp eca-control-mt.cpp \
	eca-control-objects.cpp eca-iamode-parser.cpp \
	eca-samplerate-aware.cpp eca-audio-position.cpp \
	eca-audio-format.cpp eca-audio-time.cpp eca-fileio-stream.cpp \
	eca-fileio-mmap.cpp eca-osc.cpp eca-static-object-maps.cpp \
	eca-object-map.cpp eca-preset-map.cpp audiofx.cpp \
	audiofx_misc.cpp audiofx_amplitude.cpp audiofx_compressor.cpp \
	audiofx_analysis.cpp audiofx_envelope_modulation.cpp \
	audiofx_filter.cpp audiofx_rcfilter.cpp audiofx_reverb.cpp \
	audiofx_timebased.cpp audiogate.cpp audiofx_mixing.cpp \
	audiofx_ladspa.cpp audiofx_lv2.cpp audiofx_lv2_world.cpp \
	audio-stamp.cpp global-preset.cpp preset.cpp file-preset.cpp \
	midi-cc.cpp osc-gen.cpp osc-gen-file.cpp osc-sine.cpp \
	linear-envelope.cpp two-stage-linear-envelope.cpp \
	stamp-ctrl.cpp generic-linear-envelope.cpp
am_libecasound_debug_la_OBJECTS = $(am__objects_6) $(am__objects_10)
libecasound_debug_la_OBJECTS = $(am_libecasound_debug_la_OBJECTS)
#am_libecasound_debug_la_rpath = -rpath \
#	$(libdir)
am__objects_11 = libecasound_tester.$(OBJEXT) \
	eca-test-repository.$(OBJEXT) eca-test-case.$(OBJEXT)
am_libecasound_tester_OBJECTS = $(am__objects_11)
libecasound_tester_OBJECTS = $(am_libecasound_tester_OBJECTS)
am__DEPENDENCIES_4 = $(top_builddir)/libecasound/libecasound.la \
	$(top_builddir)/kvutils/libkvutils.la
#am__DEPENDENCIES_4 = $(top_builddir)/libecasound/libecasound_debug.la \
#	$(top_builddir)/kvutils/libkvutils_debug.la
libecasound_tester_DEPENDENCIES = $(am__DEPENDENCIES_4)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libecasound_la_SOURCES) $(libecasound_debug_la_SOURCES) \
	$(libecasound_tester_SOURCES)
DIST_SOURCES = $(am__libecasound_la_SOURCES_DIST) \
	$(am__libecasound_debug_la_SOURCES_DIST) \
	$(libecasound_tester_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /kunden/homepages/9/d651463625/htdocs/gittunes/wp-content/themes/blankslate-child/assets/ecasound-2.9.1/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /kunden/homepages/9/d651463625/htdocs/gittunes/wp-content/themes/blankslate-child/assets/ecasound-2.9.1/missing --run tar
AM_CFLAGS =  -ffast-math -fstrict-aliasing -DNDEBUG -DENABLE_DBC

# Pass pkgdatadir to CPPFLAGS
AM_CPPFLAGS =  -D_REENTRANT -D_XOPEN_SOURCE=600 "-DECA_PKGDATADIR=\"${pkgdatadir}\""
AM_CXXFLAGS =  -ffast-math -fstrict-aliasing -DNDEBUG -DENABLE_DBC
AM_LDFLAGS = 
AR = ar
ARTSC_CONFIG = none
AUTOCONF = ${SHELL} /kunden/homepages/9/d651463625/htdocs/gittunes/wp-content/themes/blankslate-child/assets/ecasound-2.9.1/missing --run autoconf
AUTOHEADER = ${SHELL} /kunden/homepages/9/d651463625/htdocs/gittunes/wp-content/themes/blankslate-child/assets/ecasound-2.9.1/missing --run autoheader
AUTOMAKE = ${SHELL} /kunden/homepages/9/d651463625/htdocs/gittunes/wp-content/themes/blankslate-child/assets/ecasound-2.9.1/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECA_AM_ALL_STATIC_FALSE = 
ECA_AM_ALL_STATIC_TRUE = #
ECA_AM_COMPILE_ALSA_FALSE = 
ECA_AM_COMPILE_ALSA_TRUE = #
ECA_AM_COMPILE_ARTS_FALSE = 
ECA_AM_COMPILE_ARTS_TRUE = #
ECA_AM_COMPILE_AUDIOFILE_FALSE = 
ECA_AM_COMPILE_AUDIOFILE_TRUE = #
ECA_AM_COMPILE_JACK_FALSE = 
ECA_AM_COMPILE_JACK_TRUE = #
ECA_AM_COMPILE_OSS_FALSE = #
ECA_AM_COMPILE_OSS_TRUE = 
ECA_AM_COMPILE_SAMPLERATE_FALSE = 
ECA_AM_COMPILE_SAMPLERATE_TRUE = #
ECA_AM_COMPILE_SNDFILE_FALSE = 
ECA_AM_COMPILE_SNDFILE_TRUE = #
ECA_AM_DEBUG_MODE_FALSE = 
ECA_AM_DEBUG_MODE_TRUE = #
ECA_AM_DISABLE_EFFECTS_FALSE = 
ECA_AM_DISABLE_EFFECTS_TRUE = #
ECA_AM_FEELING_EXPERIMENTAL_FALSE = 
ECA_AM_FEELING_EXPERIMENTAL_TRUE = #
ECA_AM_KVUTILS_INSTALLED_FALSE = 
ECA_AM_KVUTILS_INSTALLED_TRUE = #
ECA_AM_PYECASOUND_CEXT_FALSE = 
ECA_AM_PYECASOUND_CEXT_TRUE = #
ECA_AM_PYECASOUND_INSTALL_FALSE = #
ECA_AM_PYECASOUND_INSTALL_TRUE = 
ECA_AM_RUBYECASOUND_INSTALL_FALSE = #
ECA_AM_RUBYECASOUND_INSTALL_TRUE = 
ECA_AM_SYSTEM_READLINE_FALSE = 
ECA_AM_SYSTEM_READLINE_TRUE = #
ECA_AM_USE_NCURSES_FALSE = 
ECA_AM_USE_NCURSES_TRUE = #
ECA_AM_USE_TERMCAP_FALSE = 
ECA_AM_USE_TERMCAP_TRUE = #
ECA_S_EXTRA_CPPFLAGS =  
ECA_S_EXTRA_LIBS =  
ECA_S_JACK_INCLUDES = 
ECA_S_JACK_LIBS = 
ECA_S_PREFIX = /usr/local
ECA_S_PYTHON_DLMODULES = /usr/lib/python2.7/lib-dynload
ECA_S_PYTHON_INCLUDES = 
ECA_S_PYTHON_MODULES = /usr/lib/python2.7
ECA_S_READLINE_INCLUDES = 
ECA_S_READLINE_LIBS = 
ECA_S_RUBY_SITEDIR = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBECASOUNDC_VERSION = 2
LIBECASOUNDC_VERSION_AGE = 1
LIBECASOUND_VERSION = 24
LIBECASOUND_VERSION_AGE = 0
LIBKVUTILS_VERSION = 10
LIBKVUTILS_VERSION_AGE = 0
LIBLILV_CFLAGS = 
LIBLILV_LIBS = 
LIBLO_CFLAGS = 
LIBLO_LIBS = 
LIBOBJS = 
LIBOIL_CFLAGS = 
LIBOIL_LIBS = 
LIBS = -ldl -lm -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /kunden/homepages/9/d651463625/htdocs/gittunes/wp-content/themes/blankslate-child/assets/ecasound-2.9.1/missing --run makeinfo
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ecasound
PACKAGE_BUGREPORT = 
PACKAGE_NAME = ecasound
PACKAGE_STRING = ecasound 2.9.1
PACKAGE_TARNAME = ecasound
PACKAGE_URL = 
PACKAGE_VERSION = 2.9.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PYTHONPATH = /usr/bin/python
RANLIB = ranlib
RUBYPATH = /usr/bin/ruby
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2.9.1
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /kunden/homepages/9/d651463625/htdocs/gittunes/wp-content/themes/blankslate-child/assets/ecasound-2.9.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
EXTRA_DIST = ChangeLog
AUTOMAKE_OPTIONS = foreign
SUBDIRS = plugins
lib_LTLIBRARIES = libecasound.la

# ----------------------------------------------------------------------
# build targets and compiler options target defines
# ----------------------------------------------------------------------
#lib_LTLIBRARIES = libecasound_debug.la
TESTS = libecasound_tester
eca_libadd = $(top_builddir)/libecasound/plugins/libecasound_plugins.la $(ECA_S_EXTRA_LIBS)

# ----------------------------------------------------------------------
# compiler and linker options
# ----------------------------------------------------------------------

# if ECA_AM_ALL_STATIC
# FIXME: always link ecasound-plugins statically
#eca_libadd = $(top_builddir)/libecasound/plugins/libecasound_plugins_debug.la $(ECA_S_EXTRA_LIBS)
eca_ldflags = -version-info 24:0:0
libecasound_tester_libs = $(top_builddir)/libecasound/libecasound.la \
				$(top_builddir)/kvutils/libkvutils.la

#libecasound_tester_libs = $(top_builddir)/libecasound/libecasound_debug.la \
#				$(top_builddir)/kvutils/libkvutils_debug.la


# note! Automake >= 1.5 will install stripped libraries
#       with "make install-strip". Older versions won't
#       strip libraries even if INSTALL_STRIP_FLAG is set.
#       also libtool 1.3.2 and older have problems 
#       with stripping libraries.
INCLUDES = -I$(srcdir) \
		-I$(top_srcdir) \
		-I$(top_srcdir)/kvutils \
		$(ECA_S_EXTRA_CPPFLAGS)


# ----------------------------------------------------------------------
# header files
# ----------------------------------------------------------------------
ecasound_audiofx_include = \
			audiofx.h \
			audiofx_misc.h \
			audiofx_amplitude.h \
			audiofx_compressor.h \
			audiofx_analysis.h \
			audiofx_envelope_modulation.h \
			audiofx_filter.h \
			audiofx_rcfilter.h \
			audiofx_reverb.h \
			audiofx_timebased.h \
			audiogate.h \
			audiofx_mixing.h \
			audiofx_ladspa.h \
			audiofx_lv2.h \
			audiofx_lv2_world.h \
			audio-stamp.h

ecasound_preset_include = \
			preset.h \
			preset_impl.h \
			file-preset.h \
			global-preset.h

ecasound_audioio_include = \
			audioio.h \
			audioio-buffered.h \
			audioio-device.h \
			audioio-plugin.h \
			audioio-manager.h \
			audioio-cdr.h \
			audioio-cdr_impl.h \
			audioio-ewf.h \
			audioio-mp3.h \
			audioio-mp3_impl.h \
			audioio-ogg.h \
			audioio-wave.h \
			audioio-raw.h \
			audioio-oss.h \
			audioio-oss_impl.h \
			audioio-null.h \
			audioio-rtnull.h \
			audioio-mikmod.h \
			audioio-loop.h \
			audioio-forked-stream.h \
			audioio-timidity.h \
			audioio-db-server.h \
			audioio-db-server_impl.h \
			audioio-db-buffer.h \
			audioio-db-client.h \
			audioio-proxy.h \
			audioio-typeselect.h \
			audioio-resample.h \
			audioio-reverse.h \
			audioio-flac.h \
			audioio-aac.h \
			audioio-tone.h \
			audioio-seqbase.h \
			audioio-acseq.h \
			audioio-barrier.h

ecasound_midi_include = \
			midi-server.h \
			midi-client.h \
			midi-parser.h \
			midiio.h \
			midiio-raw.h \
			midiio-aseq.h

ecasound_controller_include = \
			ctrl-source.h \
			midi-cc.h \
			oscillator.h \
			osc-gen.h \
			osc-gen-file.h \
			osc-sine.h \
			linear-envelope.h \
			two-stage-linear-envelope.h \
			stamp-ctrl.h \
	 		generic-linear-envelope.h

ecasound_general_include = \
			eca-chain.h \
			eca-chainop.h \
			eca-chainsetup-edit.h \
			eca-error.h \
			eca-logger.h \
			eca-logger-default.h \
			eca-logger-interface.h \
			eca-logger-wellformed.h \
			eca-engine.h \
			eca-engine-driver.h \
			eca-engine_impl.h \
			eca-session.h \
			eca-resources.h \
			resource-file.h \
			layer.h \
			eca-static-object-maps.h \
			eca-object-map.h \
			eca-preset-map.h \
			samplebuffer.h \
			samplebuffer_impl.h \
			samplebuffer_functions.h \
			samplebuffer_iterators.h \
			sample-specs.h \
			sample-ops_impl.h \
			eca-sample-conversion.h \
			eca-version.h \
			eca-object-factory.h \
			eca-chainsetup.h \
			eca-chainsetup_impl.h \
			eca-chainsetup-bufparams.h \
			eca-chainsetup-parser.h \
			eca-chainsetup-position.h \
			eca-control.h \
			eca-control-dump.h \
			eca-control-main.h \
			eca-control-mt.h \
			eca-iamode-parser.h \
			eca-iamode-parser_impl.h \
			eca-audio-position.h \
			eca-fileio.h  \
			eca-fileio-stream.h \
			eca-fileio-mmap.h \
			eca-osc.h \
			dynamic-parameters.h \
			dynamic-object.h \
			eca-object.h \
			eca-operator.h \
			generic-controller.h \
			eca-samplerate-aware.h \
			eca-audio-format.h \
			eca-audio-time.h \
			jack-connections.h

ecasound_extra_include = \
			ladspa.h

ecasound_test_framework_include = \
			eca-test-repository.h \
			eca-test-case.h \
			audiofx_amplitude_test.h \
			audioio_test.h \
			audioio-device_test.h \
			eca-audio-time_test.h \
			eca-chainsetup_test.h \
			eca-chainsetup-parser_test.h \
			eca-control_test.h \
			eca-session_test.h \
			eca-object-factory_test.h \
			eca-sample-conversion_test.h \
			generic-linear-envelope_test.h \
			samplebuffer_test.h


# note! also remembers to update install-data-local and 
#       uninstall-data targets
noinst_HEADERS = $(ecasound_audiofx_include) \
			$(ecasound_preset_include) \
			$(ecasound_audioio_include) \
			$(ecasound_midi_include) \
		 	$(ecasound_controller_include) \
			$(ecasound_general_include) \
			$(ecasound_extra_include) \
			$(ecasound_test_framework_include)


# ----------------------------------------------------------------------
# source files
# ----------------------------------------------------------------------
ecasound_audiofx_src = audiofx.cpp \
			audiofx_misc.cpp \
			audiofx_amplitude.cpp \
			audiofx_compressor.cpp \
			audiofx_analysis.cpp \
			audiofx_envelope_modulation.cpp \
			audiofx_filter.cpp \
			audiofx_rcfilter.cpp \
			audiofx_reverb.cpp \
			audiofx_timebased.cpp \
			audiogate.cpp \
			audiofx_mixing.cpp \
			audiofx_ladspa.cpp \
			audiofx_lv2.cpp \
			audiofx_lv2_world.cpp \
			audio-stamp.cpp

ecasound_preset_src = global-preset.cpp \
			preset.cpp \
			file-preset.cpp

ecasound_audioio1_src = audioio-cdr.cpp \
			audioio-ewf.cpp \
			audioio-mp3.cpp \
			audioio-ogg.cpp \
			audioio-wave.cpp \
			audioio.cpp \
			audioio-buffered.cpp \
			audioio-device.cpp \
			audioio-null.cpp \
			audioio-raw.cpp \
			audioio-mikmod.cpp \
			audioio-rtnull.cpp \
			audioio-loop.cpp \
			audioio-forked-stream.cpp \
			audioio-timidity.cpp \
			audioio-db-server.cpp \
			audioio-db-buffer.cpp \
			audioio-db-client.cpp \
			audioio-typeselect.cpp \
			audioio-resample.cpp \
			audioio-reverse.cpp \
			audioio-proxy.cpp \
			audioio-flac.cpp \
			audioio-aac.cpp \
			audioio-tone.cpp \
			audioio-seqbase.cpp \
			audioio-acseq.cpp

#ecasound_audioio2_src = 
ecasound_audioio2_src = audioio-oss.cpp
jack_connections_src = 
#jack_connections_src = jack-connections.cpp
ecasound_midi_src = \
			midi-server.cpp \
			midi-client.cpp \
			midi-parser.cpp \
			midiio.cpp \
			midiio-raw.cpp \
			midiio-aseq.cpp

ecasound_controller_src = \
			midi-cc.cpp \
			osc-gen.cpp \
			osc-gen-file.cpp \
			osc-sine.cpp \
			linear-envelope.cpp \
			two-stage-linear-envelope.cpp \
			stamp-ctrl.cpp \
			generic-linear-envelope.cpp

ecasound_general_src = eca-chain.cpp \
			eca-engine.cpp \
			samplebuffer.cpp \
			samplebuffer_functions.cpp \
			eca-session.cpp \
			eca-resources.cpp \
			resource-file.cpp \
			eca-logger.cpp \
			eca-logger-default.cpp \
			eca-logger-interface.cpp \
			eca-logger-wellformed.cpp \
			layer.cpp \
			samplebuffer_iterators.cpp \
			eca-version.cpp  \
			eca-operator.cpp \
			generic-controller.cpp \
			eca-object-factory.cpp \
			eca-chainsetup.cpp \
			eca-chainsetup-bufparams.cpp \
			eca-chainsetup-parser.cpp \
			eca-chainsetup-position.cpp \
			eca-control.cpp \
			eca-control-base.cpp \
			eca-control-dump.cpp \
			eca-control-main.cpp \
			eca-control-mt.cpp \
			eca-control-objects.cpp \
			eca-iamode-parser.cpp \
			eca-samplerate-aware.cpp \
			eca-audio-position.cpp \
			eca-audio-format.cpp \
			eca-audio-time.cpp \
			eca-fileio-stream.cpp \
			eca-fileio-mmap.cpp \
			eca-osc.cpp \
			eca-static-object-maps.cpp \
			eca-object-map.cpp \
			eca-preset-map.cpp

ecasound_common1_src = $(ecasound_audioio1_src) \
			$(ecasound_audioio2_src) \
			$(jack_connections_src) \
			$(ecasound_midi_src) \
			$(ecasound_general_src)

ecasound_common2_src = $(ecasound_audiofx_src) \
			$(ecasound_preset_src) \
		      	$(ecasound_controller_src)

#ecasound_common2_src = 
libecasound_tester_src = \
			libecasound_tester.cpp \
			eca-test-repository.cpp \
			eca-test-case.cpp

libecasound_la_SOURCES = $(ecasound_common1_src) $(ecasound_common2_src)
libecasound_debug_la_SOURCES = $(ecasound_common1_src) $(ecasound_common2_src)
libecasound_la_LDFLAGS = -export-dynamic $(eca_ldflags) -static
libecasound_la_LIBADD = $(eca_libadd)
libecasound_debug_la_LDFLAGS = $(libecasound_la_LDFLAGS)
libecasound_debug_la_LIBADD = $(libecasound_la_LIBADD)
libecasound_tester_SOURCES = $(libecasound_tester_src)
#libecasound_tester_CFLAGS =  $(AM_CFLAGS)
libecasound_tester_LDADD = $(libecasound_tester_libs)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  libecasound/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  libecasound/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
libecasound-config: $(top_builddir)/config.status $(srcdir)/libecasound-config.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libecasound.la: $(libecasound_la_OBJECTS) $(libecasound_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libecasound_la_rpath) $(libecasound_la_LDFLAGS) $(libecasound_la_OBJECTS) $(libecasound_la_LIBADD) $(LIBS)
libecasound_debug.la: $(libecasound_debug_la_OBJECTS) $(libecasound_debug_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libecasound_debug_la_rpath) $(libecasound_debug_la_LDFLAGS) $(libecasound_debug_la_OBJECTS) $(libecasound_debug_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
libecasound_tester$(EXEEXT): $(libecasound_tester_OBJECTS) $(libecasound_tester_DEPENDENCIES) 
	@rm -f libecasound_tester$(EXEEXT)
	$(CXXLINK) $(libecasound_tester_LDFLAGS) $(libecasound_tester_OBJECTS) $(libecasound_tester_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/audio-stamp.Plo
include ./$(DEPDIR)/audiofx.Plo
include ./$(DEPDIR)/audiofx_amplitude.Plo
include ./$(DEPDIR)/audiofx_analysis.Plo
include ./$(DEPDIR)/audiofx_compressor.Plo
include ./$(DEPDIR)/audiofx_envelope_modulation.Plo
include ./$(DEPDIR)/audiofx_filter.Plo
include ./$(DEPDIR)/audiofx_ladspa.Plo
include ./$(DEPDIR)/audiofx_lv2.Plo
include ./$(DEPDIR)/audiofx_lv2_world.Plo
include ./$(DEPDIR)/audiofx_misc.Plo
include ./$(DEPDIR)/audiofx_mixing.Plo
include ./$(DEPDIR)/audiofx_rcfilter.Plo
include ./$(DEPDIR)/audiofx_reverb.Plo
include ./$(DEPDIR)/audiofx_timebased.Plo
include ./$(DEPDIR)/audiogate.Plo
include ./$(DEPDIR)/audioio-aac.Plo
include ./$(DEPDIR)/audioio-acseq.Plo
include ./$(DEPDIR)/audioio-buffered.Plo
include ./$(DEPDIR)/audioio-cdr.Plo
include ./$(DEPDIR)/audioio-db-buffer.Plo
include ./$(DEPDIR)/audioio-db-client.Plo
include ./$(DEPDIR)/audioio-db-server.Plo
include ./$(DEPDIR)/audioio-device.Plo
include ./$(DEPDIR)/audioio-ewf.Plo
include ./$(DEPDIR)/audioio-flac.Plo
include ./$(DEPDIR)/audioio-forked-stream.Plo
include ./$(DEPDIR)/audioio-loop.Plo
include ./$(DEPDIR)/audioio-mikmod.Plo
include ./$(DEPDIR)/audioio-mp3.Plo
include ./$(DEPDIR)/audioio-null.Plo
include ./$(DEPDIR)/audioio-ogg.Plo
include ./$(DEPDIR)/audioio-oss.Plo
include ./$(DEPDIR)/audioio-proxy.Plo
include ./$(DEPDIR)/audioio-raw.Plo
include ./$(DEPDIR)/audioio-resample.Plo
include ./$(DEPDIR)/audioio-reverse.Plo
include ./$(DEPDIR)/audioio-rtnull.Plo
include ./$(DEPDIR)/audioio-seqbase.Plo
include ./$(DEPDIR)/audioio-timidity.Plo
include ./$(DEPDIR)/audioio-tone.Plo
include ./$(DEPDIR)/audioio-typeselect.Plo
include ./$(DEPDIR)/audioio-wave.Plo
include ./$(DEPDIR)/audioio.Plo
include ./$(DEPDIR)/eca-audio-format.Plo
include ./$(DEPDIR)/eca-audio-position.Plo
include ./$(DEPDIR)/eca-audio-time.Plo
include ./$(DEPDIR)/eca-chain.Plo
include ./$(DEPDIR)/eca-chainsetup-bufparams.Plo
include ./$(DEPDIR)/eca-chainsetup-parser.Plo
include ./$(DEPDIR)/eca-chainsetup-position.Plo
include ./$(DEPDIR)/eca-chainsetup.Plo
include ./$(DEPDIR)/eca-control-base.Plo
include ./$(DEPDIR)/eca-control-dump.Plo
include ./$(DEPDIR)/eca-control-main.Plo
include ./$(DEPDIR)/eca-control-mt.Plo
include ./$(DEPDIR)/eca-control-objects.Plo
include ./$(DEPDIR)/eca-control.Plo
include ./$(DEPDIR)/eca-engine.Plo
include ./$(DEPDIR)/eca-fileio-mmap.Plo
include ./$(DEPDIR)/eca-fileio-stream.Plo
include ./$(DEPDIR)/eca-iamode-parser.Plo
include ./$(DEPDIR)/eca-logger-default.Plo
include ./$(DEPDIR)/eca-logger-interface.Plo
include ./$(DEPDIR)/eca-logger-wellformed.Plo
include ./$(DEPDIR)/eca-logger.Plo
include ./$(DEPDIR)/eca-object-factory.Plo
include ./$(DEPDIR)/eca-object-map.Plo
include ./$(DEPDIR)/eca-operator.Plo
include ./$(DEPDIR)/eca-osc.Plo
include ./$(DEPDIR)/eca-preset-map.Plo
include ./$(DEPDIR)/eca-resources.Plo
include ./$(DEPDIR)/eca-samplerate-aware.Plo
include ./$(DEPDIR)/eca-session.Plo
include ./$(DEPDIR)/eca-static-object-maps.Plo
include ./$(DEPDIR)/eca-test-case.Po
include ./$(DEPDIR)/eca-test-repository.Po
include ./$(DEPDIR)/eca-version.Plo
include ./$(DEPDIR)/file-preset.Plo
include ./$(DEPDIR)/generic-controller.Plo
include ./$(DEPDIR)/generic-linear-envelope.Plo
include ./$(DEPDIR)/global-preset.Plo
include ./$(DEPDIR)/jack-connections.Plo
include ./$(DEPDIR)/layer.Plo
include ./$(DEPDIR)/libecasound_tester.Po
include ./$(DEPDIR)/linear-envelope.Plo
include ./$(DEPDIR)/midi-cc.Plo
include ./$(DEPDIR)/midi-client.Plo
include ./$(DEPDIR)/midi-parser.Plo
include ./$(DEPDIR)/midi-server.Plo
include ./$(DEPDIR)/midiio-aseq.Plo
include ./$(DEPDIR)/midiio-raw.Plo
include ./$(DEPDIR)/midiio.Plo
include ./$(DEPDIR)/osc-gen-file.Plo
include ./$(DEPDIR)/osc-gen.Plo
include ./$(DEPDIR)/osc-sine.Plo
include ./$(DEPDIR)/preset.Plo
include ./$(DEPDIR)/resource-file.Plo
include ./$(DEPDIR)/samplebuffer.Plo
include ./$(DEPDIR)/samplebuffer_functions.Plo
include ./$(DEPDIR)/samplebuffer_iterators.Plo
include ./$(DEPDIR)/stamp-ctrl.Plo
include ./$(DEPDIR)/two-stage-linear-envelope.Plo

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-data-local

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-local

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-data-local install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-local


# ---------------------------------------------------------------------
# Install targets - note! we don't install $ecasound_extra_include
#                         nor $ecasound_test_framework_include
install-data-local:
	$(INSTALL) -d $(DESTDIR)$(includedir)/libecasound
	cd $(srcdir) ; \
	$(INSTALL_DATA) \
		$(ecasound_audiofx_include) \
		$(ecasound_preset_include) \
		$(ecasound_audioio_include) \
		$(ecasound_controller_include) \
		$(ecasound_midi_include) \
		$(ecasound_general_include) \
		$(DESTDIR)$(includedir)/libecasound
	$(INSTALL) -d $(DESTDIR)$(bindir)
	$(INSTALL_SCRIPT) libecasound-config $(DESTDIR)$(bindir)/libecasound-config

# ---------------------------------------------------------------------
# Uninstall targets
uninstall-local:
	cd $(DESTDIR)$(includedir)/libecasound && \
	rm -f   $(ecasound_audiofx_include) \
		$(ecasound_preset_include) \
		$(ecasound_audioio_include) \
		$(ecasound_controller_include) \
		$(ecasound_midi_include) \
		$(ecasound_general_include)
	rmdir $(DESTDIR)$(includedir)/libecasound || echo "Skipping"
	rm -f 	$(DESTDIR)$(bindir)/libecasound-config
	rmdir $(DESTDIR)$(bindir) || echo "Skipping"
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
